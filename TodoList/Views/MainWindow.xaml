<Window x:Class="TodoList.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TodoList"
        xmlns:designViewModels="clr-namespace:TodoList.DesignViewModels"
        xmlns:vm="clr-namespace:TodoList.ViewModels"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="TodoList" Height="400" Width="300">
    
    <Window.DataContext>
        <vm:MainWindowViewModel></vm:MainWindowViewModel>
    </Window.DataContext>

    <Window.Resources>

        <ResourceDictionary>
            <designViewModels:MainWindowDesignViewModel x:Key="DesignViewModel"></designViewModels:MainWindowDesignViewModel>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/TaskListStyle.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Window.Resources>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding RefreshListsCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid d:DataContext="{StaticResource DesignViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <TextBlock Text="Todo List" HorizontalAlignment="Left"  />
            <ToggleButton IsChecked="{Binding ShowCompleted}" 
                          HorizontalAlignment="Right" 
                          HorizontalContentAlignment="Right" 
                          Content="Pokazuj wykonane"></ToggleButton>
        </Grid>

        <DatePicker Grid.Row="1"
                    SelectedDate="{Binding SelectedDate, Mode=TwoWay}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedDateChanged">
                    <i:InvokeCommandAction Command="{Binding RefreshListsCommand}"></i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DatePicker>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Content="+"
                    Grid.Column="0"
                    Command="{Binding AddNewTaskCommand}"/>
            <Grid Grid.Column="1">
                <TextBox Name="TaskName"
                         Text="{Binding TaskName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" 
                                    Command="{Binding AddNewTaskCommand}" 
                                    CommandParameter="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
                    </TextBox.InputBindings>
                </TextBox>
                <TextBlock Text="Treść nowego zadania"
                           IsHitTestVisible="False">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=TaskName}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=TaskName}" Value="true">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Grid>

        <ScrollViewer Grid.Row="3" 
                      VerticalScrollBarVisibility="Auto">

            <StackPanel>

                <Expander IsExpanded="False">
                    <Expander.Header>
                        <TextBlock Text="Zaległe"></TextBlock>
                    </Expander.Header>
                    <StackPanel>
                        <ListBox HorizontalContentAlignment="Stretch"
                         ItemTemplate="{StaticResource TaskListItemWithDateTemplate}"
                         ItemsSource="{Binding OldTasks, Mode=TwoWay}"
                         ItemContainerStyle="{StaticResource TaskListBoxItemContainerStyle}"
                         Visibility="{Binding OldTasks, Converter={StaticResource ListToVisibilityConverter}}"
                         ContextMenu="{StaticResource TaskListContextMenuTemplate}" 
                         Style="{DynamicResource ListBoxWithoutScrollViewer}">
                        </ListBox>
                        <TextBlock Text="Brak zadań do wyświetlenia">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="{Binding OldTasks, Converter={StaticResource ListToVisibilityNegatedConverter}}"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Loading}" Value="true">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="Proszę czekać..." 
                               Visibility="{Binding Loading, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBlock>
                    </StackPanel>
                </Expander>

                <Expander IsExpanded="True">
                    <Expander.Header>
                        <TextBlock Text="{Binding SelectedDate, StringFormat=Wybrany dzień ({0:yyyy-MM-dd})}"></TextBlock>
                    </Expander.Header>
                    <StackPanel>
                        <ListBox HorizontalContentAlignment="Stretch"
                         ItemTemplate="{StaticResource TaskListItemTemplate}"
                         ItemsSource="{Binding CurrentTasks, Mode=TwoWay}"
                         ItemContainerStyle="{StaticResource TaskListBoxItemContainerStyle}"
                         Visibility="{Binding CurrentTasks, Converter={StaticResource ListToVisibilityConverter}}"
                         ContextMenu="{StaticResource TaskListContextMenuTemplate}"
                         Style="{DynamicResource ListBoxWithoutScrollViewer}">
                        </ListBox>
                        <TextBlock Text="Brak zadań do wyświetlenia">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="{Binding CurrentTasks, Converter={StaticResource ListToVisibilityNegatedConverter}}"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Loading}" Value="true">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="Proszę czekać..." 
                               Visibility="{Binding Loading, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBlock>
                    </StackPanel>
                </Expander>

                <Expander IsExpanded="False">
                    <Expander.Header>
                        <TextBlock Text="Nadchodzące w tygodniu"></TextBlock>
                    </Expander.Header>
                    <StackPanel>
                        <ListBox HorizontalContentAlignment="Stretch"
                         ItemTemplate="{StaticResource TaskListItemWithDateTemplate}"
                         ItemsSource="{Binding FollowingTasks, Mode=TwoWay}"
                         ItemContainerStyle="{StaticResource TaskListBoxItemContainerStyle}"
                         Visibility="{Binding FollowingTasks, Converter={StaticResource ListToVisibilityConverter}}"
                         ContextMenu="{StaticResource TaskListContextMenuTemplate}"
                         Style="{DynamicResource ListBoxWithoutScrollViewer}">
                        </ListBox>
                        <TextBlock Text="Brak zadań do wyświetlenia">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="{Binding FollowingTasks, Converter={StaticResource ListToVisibilityNegatedConverter}}"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Loading}" Value="true">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="Proszę czekać..." 
                               Visibility="{Binding Loading, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBlock>
                    </StackPanel>
                </Expander>

            </StackPanel>
        </ScrollViewer>
    </Grid>
</Window>